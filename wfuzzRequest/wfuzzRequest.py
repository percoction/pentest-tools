#!/usr/bin/python

import os
import sys
import re

def parseRequest(reqFile):
    f = open(reqFile, 'r')
    line = f.readline().rstrip('\n')
    method, url, protocol = line.split()
    headers = {}
    cookies = {}
    line = f.readline().rstrip('\n')
    while len(line) != 0:
        key, value = line.split(':', 1)
        if key == 'Cookie':
            cookies = parseCookies(value)
        else:
            headers[key.strip()] = value.strip()
        line = f.readline().rstrip('\n')
        
    postData = f.readline().rstrip('\n')
    return method, url, headers, cookies, postData
    
def parseCookies(string):
    cookies = {}
    l = string.split(';')
    for c in l:
        key, value = c.split('=')
        cookies[key.strip()] = value.strip()
    return cookies

def escapeCommand(cmd):
    return cmd.replace('$', '\\$')

def replaceFuzzParam(query, fuzzParam):
   return re.sub(r'(' + fuzzParam + '=)(.*?)(&|$)', r'\1FUZZ{\2}\3', query) 

def main():
    if len(sys.argv) < 4:
        print "Invalid number of arguments.. format:"
        print "wfuzzRequest.py request.txt param wordlist.txt [proxy_url:port]"
        sys.exit()

    reqFile = sys.argv[1]
    fuzzParam = sys.argv[2]
    wordlist = sys.argv[3]
    proxy = sys.argv[4] if len(sys.argv) > 4 else None

    method, url, headers, cookies, postData = parseRequest(reqFile)

    #print method + ' ' + url
    #print headers
    #print cookies
    #print postData.encode('hex')

    cmd = 'wfuzz '
    # proxy
    if proxy:
        cmd = cmd + '-p ' + proxy + ' '
    # headers
    for key in headers:
        cmd = cmd + '-H "' + key + ': ' + headers[key] + '" '
    # cookies
    for key in cookies:
        cmd = cmd + '-b "' + key + '=' + cookies[key] + '" '
    # post data AND method!
    if method == 'POST': # even add blank POST data to enforce POST method in wfuzz
        postData = replaceFuzzParam(postData, fuzzParam)
        cmd = cmd + '-d "' + postData + '" '
    # wordlist
    cmd = cmd + '-w ' + wordlist + ' '
    # url
    url = replaceFuzzParam(url, fuzzParam)
    cmd = cmd + url

    # escape chars ($) for bash
    cmd = escapeCommand(cmd)

    print cmd
    
    print os.system(cmd)
    sys.exit()

if __name__ == '__main__':
    main()
